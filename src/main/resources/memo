이야 위에 프로퍼티스에는 주석으로던 뭐던 한글로 적으면 다 깨져버린다

뭔가 많이 적어놨는데 다 날아갔다 얏호~

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect 에 관한 내용이였던거 같다
아마 데이터베이스의 지정과 jpa에서의 쿼리문 변경에 대한 처리를 담당했던 것 같다

그리고 어떤 쿼리문이  실행되었는지 확인하기 위해 spring.jpa.show-sql=true 를 사용했다.

h2는 로컬 저장소를 이용하므로 볼려면 spring.h2.console.enabled=true 를 추가하자
콘솔 접근시 메인 함수를 실행하여 서버를 열고 http://localhost:8080/h2-console/ 를 통해서 들어간다
프로퍼티 아래에 설정을 해줘야 할수있네

구글 등 인증을 위해 Oauth용 프로퍼티를 생성했다
scope의 기본값은 openid, profile, email 이다
openid가 있을 경우 각기 다른 플랫폼에대한 각기 다른 OAuth서비스가 필요하다
-> GCP에서 Oauth 인증서를 만들고 내부 id와 비밀번호를 복사하여 oauth 프로퍼티에 넣어야한다

application-oauth로 프로퍼티를 만들었기 때문에 application에서는 profile = oauth로 호출할 수 있다!

